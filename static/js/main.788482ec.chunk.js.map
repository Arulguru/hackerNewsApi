{"version":3,"sources":["utilities/selectFields.js","services/hackerNewsApi.js","styles/StoryStyles.js","components/mapTime.js","components/Story.js","components/TopStory.js","components/BestStory.js","styles/StoriesContainerStyles.js","containers/StoryContainer.js","App.js","reportWebVitals.js","index.js"],"names":["selectFields","id","by","url","time","title","score","text","parent","kids","baseUrl","newStoriesUrl","bestStoriesUrl","topStoriesUrl","storyUrl","getStory","storyId","a","axios","get","then","data","result","getBestStory","bestStoryId","getTopStory","topStoryId","getStoryIds","getBestStoryIds","getTopStoryIds","StoryWrapper","styled","section","StoryTitle","h1","StoryMeta","div","StoryMetaElement","span","props","color","mapTime","timestamp","seconds","Math","floor","Date","interval","Link","href","target","rel","Story","useState","story","setStory","useEffect","data-testid","length","TopStory","topStory","setTopStory","BestStory","bestStory","setBestStory","GlobalStyle","createGlobalStyle","StoriesContainerWrapper","main","HeadWrapper","ButtonWrapper","button","StoryContainer","storyIds","setStoryIds","bestStoryIds","setBestStoryId","topStoryIds","setTopStoryId","storyView","setStoryView","bestStoryView","setBestStoryView","topStoryView","setTopStoryView","op","op2","op3","data-test-id","onClick","className","style","display","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"wNAAaA,EAAa,wEAA+C,GAA7CC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,GAAGC,EAAR,EAAQA,IAAIC,EAAZ,EAAYA,KAAKC,EAAjB,EAAiBA,MAAMC,EAAvB,EAAuBA,MAAMC,EAA7B,EAA6BA,KAAKC,EAAlC,EAAkCA,OAAOC,EAAzC,EAAyCA,KAAzC,MAAqD,CAC3ER,KAAGC,KAAGC,MAAIC,OAAKC,QAAMC,QAAMC,OAAKC,SAAOC,SCE9BC,EAAQ,yCACRC,EAAc,GAAD,OAAID,EAAJ,mBACbE,EAAe,GAAD,OAAIF,EAAJ,oBACdG,EAAc,GAAD,OAAIH,EAAJ,mBACbI,EAAS,GAAD,OAAIJ,EAAJ,SAERK,EAAQ,uCAAC,WAAMC,GAAN,eAAAC,EAAA,sEACCC,IAAMC,IAAN,UAAaL,EAASE,EAAtB,UAAsCI,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAUA,GAAQrB,EAAaqB,MAD3E,cACZC,EADY,yBAGXA,GAHW,2CAAD,sDAMRC,EAAY,uCAAC,WAAMC,GAAN,eAAAP,EAAA,sEACHC,IAAMC,IAAN,UAAaL,EAASU,EAAtB,UAA0CJ,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAUA,GAAQrB,EAAaqB,MAD3E,cAChBC,EADgB,yBAGfA,GAHe,2CAAD,sDAMZG,EAAW,uCAAC,WAAMC,GAAN,eAAAT,EAAA,sEACFC,IAAMC,IAAN,UAAaL,EAASY,EAAtB,UAAyCN,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAUA,GAAQrB,EAAaqB,MAD3E,cACfC,EADe,yBAEdA,GAFc,2CAAD,sDAQXK,EAAW,uCAAC,4BAAAV,EAAA,sEACDC,IAAMC,IAAIR,GAAeS,MAAK,qBAAEC,QAD/B,cACfC,EADe,yBAEdA,GAFc,2CAAD,qDAKXM,EAAe,uCAAC,4BAAAX,EAAA,sEACLC,IAAMC,IAAIP,GAAgBQ,MAAK,qBAAEC,QAD5B,cACnBC,EADmB,yBAElBA,GAFkB,2CAAD,qDAKfO,EAAc,uCAAC,4BAAAZ,EAAA,sEACJC,IAAMC,IAAIN,GAAeO,MAAK,qBAAEC,QAD5B,cAClBC,EADkB,yBAEjBA,GAFiB,2CAAD,qD,cCrCdQ,EAAaC,IAAOC,QAAR,sEAMZC,EAAWF,IAAOG,GAAR,uWAqBVC,EAAUJ,IAAOK,IAAR,6RAqBTC,EAAiBN,IAAOO,KAAR,sEAGjB,SAAAC,GAAK,OAAEA,EAAMC,OAAO,SCrDnBC,EAAQ,SAAAC,GACjB,IAAMC,EAASC,KAAKC,OAAO,IAAIC,KAAmB,IAAVJ,GAAgB,KACpDK,EAASH,KAAKC,MAAMF,EAAQ,SAEhC,OAAGI,EAAS,EACF,GAAN,OAAUA,EAAV,eAGJA,EAASH,KAAKC,MAAMF,EAAQ,SAChB,EACF,GAAN,OAAUI,EAAV,gBAGJA,EAASH,KAAKC,MAAMF,EAAQ,QAChB,EACF,GAAN,OAAUI,EAAV,cAGJA,EAASH,KAAKC,MAAMF,EAAQ,OAChB,EACF,GAAN,OAAUI,EAAV,eAGJA,EAASH,KAAKC,MAAMF,EAAQ,KAChB,EACF,GAAN,OAAUI,EAAV,gBAGE,GAAN,OAAUH,KAAKC,MAAMF,GAArB,iB,OCvBEK,EAAO,SAAC,GAAD,IAAG7C,EAAH,EAAGA,IAAKE,EAAR,EAAQA,MAAR,OACT,mBAAG4C,KAAM9C,EAAK+C,OAAO,SAASC,IAAI,aAAlC,SACG9C,KAKM+C,EAAM,SAAC,GAAa,IAAZpC,EAAW,EAAXA,QACjB,EAAuBqC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OAJAC,qBAAU,WACNzC,EAASC,GAASI,MAAK,SAAAC,GAAI,OAAEA,GAAQA,EAAKlB,KAAOoD,EAASlC,QAC5D,IAEKiC,GAASA,EAAMnD,IAClB,mCACA,eAAC2B,EAAD,CAAc2B,cAAY,QAA1B,UACI,cAACxB,EAAD,UAAY,mBAAGiB,OAAO,SAASD,KAAMK,EAAMnD,IAA/B,SAAqCmD,EAAMjD,UAEvD,eAAC8B,EAAD,WACI,uBAAOsB,cAAY,WAAnB,UACI,cAACpB,EAAD,CAAkBG,MAAM,OAAxB,iBADJ,WAC8Dc,EAAMpD,OAEpE,uBAAOuD,cAAY,aAAnB,UACI,cAACpB,EAAD,CAAkBG,MAAM,OAAxB,qBADJ,WAESC,EAAQa,EAAMlD,aAI3B,eAAC+B,EAAD,WACI,iCACA,cAACE,EAAD,CAAkBG,MAAM,OAAxB,oBADA,WAESc,EAAMhD,UAGf,cAAC+B,EAAD,UACI,6CACA,cAAC,EAAD,CACIlC,IAAG,+CAA0Ca,GAC7CX,MAAK,UAAKiD,EAAM7C,MAAQ6C,EAAM7C,KAAKiD,OAAS,EAAIJ,EAAM7C,KAAKiD,OAAS,EAA/D,4BAWvB,MCnDAV,EAAO,SAAC,GAAD,IAAG7C,EAAH,EAAGA,IAAKE,EAAR,EAAQA,MAAR,OACT,mBAAG4C,KAAM9C,EAAK+C,OAAO,SAASC,IAAI,aAAlC,SACG9C,KAKMsD,EAAS,SAAC,GAAgB,IAAfjC,EAAc,EAAdA,WACpB,EAA6B2B,mBAAS,IAAtC,mBAAOO,EAAP,KAAgBC,EAAhB,KAOA,OAJAL,qBAAU,WACN/B,EAAYC,GAAYN,MAAK,SAAAC,GAAI,OAAEA,GAAQA,EAAKlB,KAAO0D,EAAYxC,QACrE,IAEKuC,GAAYA,EAASzD,IACxB,qCAEA,eAAC2B,EAAD,CAAc2B,cAAY,QAA1B,UACI,cAACxB,EAAD,UAAY,mBAAGiB,OAAO,SAASD,KAAMW,EAASzD,IAAlC,SAAwCyD,EAASvD,UAE7D,eAAC8B,EAAD,WACI,uBAAOsB,cAAY,WAAnB,UACI,cAACpB,EAAD,CAAkBG,MAAM,OAAxB,iBADJ,WAC8DoB,EAAS1D,OAEvE,uBAAOuD,cAAY,aAAnB,UACI,cAACpB,EAAD,CAAkBG,MAAM,OAAxB,qBADJ,WAESC,EAAQmB,EAASxD,aAI9B,eAAC+B,EAAD,WACI,iCACA,cAACE,EAAD,CAAkBG,MAAM,OAAxB,oBADA,WAESoB,EAAStD,UAGlB,cAAC+B,EAAD,UACI,6CACA,cAAC,EAAD,CACIlC,IAAG,+CAA0CuB,GAC7CrB,MAAK,UAAKuD,EAASnD,MAAQmD,EAASnD,KAAKiD,OAAS,EAAIE,EAASnD,KAAKiD,OAAS,EAAxE,0BAOrB,0BAEF,MClDAV,EAAO,SAAC,GAAD,IAAG7C,EAAH,EAAGA,IAAKE,EAAR,EAAQA,MAAR,OACT,mBAAG4C,KAAM9C,EAAK+C,OAAO,SAASC,IAAI,aAAlC,SACG9C,KAKMyD,EAAU,SAAC,GAAiB,IAAhBtC,EAAe,EAAfA,YACrB,EAA+B6B,mBAAS,IAAxC,mBAAOU,EAAP,KAAiBC,EAAjB,KAOA,OAJAR,qBAAU,WACNjC,EAAaC,GAAaJ,MAAK,SAAAC,GAAI,OAAEA,GAAQA,EAAKlB,KAAO6D,EAAa3C,QACxE,IAEK0C,GAAaA,EAAU5D,IAC1B,qCACA,eAAC2B,EAAD,CAAc2B,cAAY,QAA1B,UACI,cAACxB,EAAD,UAAY,mBAAGiB,OAAO,SAASD,KAAMc,EAAU5D,IAAnC,SAAyC4D,EAAU1D,UAE/D,eAAC8B,EAAD,WACI,uBAAOsB,cAAY,WAAnB,UACI,cAACpB,EAAD,CAAkBG,MAAM,OAAxB,iBADJ,WAC8DuB,EAAU7D,OAExE,uBAAOuD,cAAY,aAAnB,UACI,cAACpB,EAAD,CAAkBG,MAAM,OAAxB,qBADJ,WAESC,EAAQsB,EAAU3D,aAI/B,eAAC+B,EAAD,WACI,iCACA,cAACE,EAAD,CAAkBG,MAAM,OAAxB,oBADA,WAESuB,EAAUzD,UAGf,cAAC+B,EAAD,UACA,6CACA,cAAC,EAAD,CACIlC,IAAG,+CAA0CqB,GAC7CnB,MAAK,UAAK0D,EAAUtD,MAAQsD,EAAUtD,KAAKiD,OAAS,EAAIK,EAAUtD,KAAKiD,OAAS,EAA3E,0BAOpB,0BAIH,MCtDOO,EAAYC,YAAD,uOAgBXC,EAAwBpC,IAAOqC,KAAR,8FAKvBC,EAAYtC,IAAOG,GAAR,0OAaXoC,EAAcvC,IAAOwC,OAAR,kNCrBbC,EAAe,WACxB,MAA6BnB,mBAAS,IAAtC,mBAAOoB,EAAP,KAAgBC,EAAhB,KACA,EAAmCrB,mBAAS,IAA5C,mBAAMsB,EAAN,KAAmBC,EAAnB,KACA,EAAiCvB,mBAAS,IAA1C,mBAAMwB,EAAN,KAAkBC,EAAlB,KACA,EAA8BzB,mBAAS,SAAvC,mBAAM0B,EAAN,KAAgBC,EAAhB,KACA,EAAsC3B,mBAAS,QAA/C,mBAAM4B,EAAN,KAAoBC,EAApB,KACA,EAAoC7B,mBAAS,QAA7C,mBAAM8B,EAAN,KAAmBC,EAAnB,KAGA5B,qBAAU,WACR7B,IAAcP,MAAK,SAAAiE,GAAE,OAAEA,GAAMX,EAAYW,MACzCzD,IAAkBR,MAAK,SAAAkE,GAAG,OAAEA,GAAOV,EAAeU,MAClDzD,IAAiBT,MAAK,SAAAmE,GAAG,OAAEA,GAAOT,EAAcS,QAChD,IAoBF,OACA,qCAEA,cAACtB,EAAD,IACA,eAACE,EAAD,CAAyBqB,eAAa,qBAAtC,UACI,eAACnB,EAAD,iDAAgD,gEAChD,6FACA,cAACC,EAAD,CAAemB,QAxBG,WAClBT,EAAa,SACbE,EAAiB,QACjBE,EAAgB,SAqBhB,yBACA,cAACd,EAAD,CAAemB,QApBI,WACnBT,EAAa,QACbE,EAAiB,SACjBE,EAAgB,SAiBhB,0BACA,cAACd,EAAD,CAAemB,QAhBG,WAClBT,EAAa,QACbE,EAAiB,QACjBE,EAAgB,UAahB,yBACA,uBACA,sBAAKM,UAAU,kBAAf,UACI,qBAAKA,UAAU,MAAf,SAEI,sBAAKC,MAAO,CAACC,QAAQ,GAAD,OAAIb,IAAcW,UAAU,YAAhD,UACI,6CACHjB,EAASoB,KAAI,SAAA7E,GAAO,OAAG,cAAC,EAAD,CAAqBA,QAASA,GAAlBA,WAGxC,qBAAK0E,UAAU,MAAf,SACI,sBAAKC,MAAO,CAACC,QAAQ,GAAD,OAAIX,IAAkBS,UAAU,YAApD,UACI,8CACHf,EAAakB,KAAI,SAAArE,GAAW,OAAG,cAAC,EAAD,CAA6BA,YAAaA,GAA1BA,WAGpD,qBAAKkE,UAAU,MAAf,SACI,sBAAKC,MAAO,CAACC,QAAQ,GAAD,OAAIT,IAAiBO,UAAU,YAAnD,UACI,6CACHb,EAAYgB,KAAI,SAAAnE,GAAU,OAAG,cAAC,EAAD,CAA2BA,WAAYA,GAAxBA,qBCxEhDoE,EAAI,WAEjB,OACA,mCAGA,cAAC,EAAD,OCEeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7E,MAAK,YAAkD,IAA/C8E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAQ1BX,M","file":"static/js/main.788482ec.chunk.js","sourcesContent":["export const selectFields=({id,by,url,time,title,score,text,parent,kids}={})=>({\r\n    id,by,url,time,title,score,text,parent,kids,\r\n    \r\n})","import axios from 'axios';\r\nimport {selectFields} from '../utilities/selectFields'\r\n\r\nexport const baseUrl=`https://hacker-news.firebaseio.com/v0/`;\r\nexport const newStoriesUrl=`${baseUrl}newstories.json`;\r\nexport const bestStoriesUrl=`${baseUrl}beststories.json`;\r\nexport const topStoriesUrl=`${baseUrl}topstories.json`;\r\nexport const storyUrl=`${baseUrl}item/`;\r\n\r\nexport const getStory=async(storyId)=>{\r\n    const result=await axios.get(`${storyUrl+storyId}.json`).then(({data})=>data && selectFields(data));\r\n   \r\n    return result;\r\n}\r\n\r\nexport const getBestStory=async(bestStoryId)=>{\r\n    const result=await axios.get(`${storyUrl+bestStoryId}.json`).then(({data})=>data && selectFields(data));\r\n  \r\n    return result;\r\n}\r\n\r\nexport const getTopStory=async(topStoryId)=>{\r\n    const result=await axios.get(`${storyUrl+topStoryId}.json`).then(({data})=>data && selectFields(data));\r\n    return result;\r\n}\r\n\r\n\r\n\r\n\r\nexport const getStoryIds=async()=>{\r\n    const result =await axios.get(newStoriesUrl).then(({data})=>data);\r\n    return result;\r\n}\r\n\r\nexport const getBestStoryIds=async()=>{\r\n    const result =await axios.get(bestStoriesUrl).then(({data})=>data);\r\n    return result;\r\n}\r\n\r\nexport const getTopStoryIds=async()=>{\r\n    const result =await axios.get(topStoriesUrl).then(({data})=>data);\r\n    return result;\r\n}\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const StoryWrapper=styled.section`\r\n    padding:5px;\r\n    margin-bottom:5px;\r\n`\r\n\r\n\r\nexport const StoryTitle=styled.h1`\r\n    margin-bottom:10px;\r\n    margin-top:0px;\r\n    font-size:14px;\r\n    line-height:2.0;\r\n    \r\n    text-decoration:none;\r\n\r\n    a{  padding:5px;\r\n        border-radius:8px;\r\n        color:#fff;\r\n        background-color:#4d4949;\r\n        text-decoration:none;\r\n        \r\n    }\r\n    a:hover{\r\n        background-color:#000;\r\n    }\r\n`\r\n\r\n\r\nexport const StoryMeta=styled.div`\r\nfont-style:italic;\r\nmargin-bottom:8px;\r\ncolor:#fff;\r\n\r\n >span:first-child{\r\n    margin-right:10px;\r\n} \r\n\r\n>span:not(:first-child):before{\r\n    content:'';\r\n    margin-right:8px;\r\n    margin-left:8px;\r\n}\r\n\r\n.story__meta-bold{\r\n    font-weight:bold;\r\n   \r\n}\r\n`\r\n\r\nexport const StoryMetaElement=styled.span`\r\n \r\n    font-weight:bold;\r\n    color:${props=>props.color||'red'};\r\n`;","export const mapTime=timestamp=>{\r\n    const seconds =Math.floor((new Date() - timestamp*1000)/1000);\r\n    let interval=Math.floor(seconds/31536000);\r\n\r\n    if(interval>1){\r\n        return `${interval} years ago`\r\n    }\r\n\r\n    interval=Math.floor(seconds/2592000);\r\n    if(interval>1){\r\n        return `${interval} months ago`\r\n    }\r\n\r\n    interval=Math.floor(seconds/86400);\r\n    if(interval>1){\r\n        return `${interval} days ago`\r\n    }\r\n\r\n    interval=Math.floor(seconds/3600);\r\n    if(interval>1){\r\n        return `${interval} hours ago`\r\n    }\r\n\r\n    interval=Math.floor(seconds/60);\r\n    if(interval>1){\r\n        return `${interval} minutes ago`\r\n    }\r\n\r\n    return `${Math.floor(seconds)} seconds ago`\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {getStory} from '../services/hackerNewsApi';\r\nimport {StoryMeta, StoryMetaElement, StoryTitle, StoryWrapper} from '../styles/StoryStyles'\r\nimport {mapTime} from '../components/mapTime'\r\n\r\nconst Link = ({ url, title }) => (\r\n    <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n      {title}\r\n    </a>\r\n  );\r\n\r\n\r\nexport const Story=({storyId})=>{\r\n    const [story,setStory]=useState({});\r\n\r\n\r\n    useEffect(()=>{\r\n        getStory(storyId).then(data=>data && data.url && setStory(data))\r\n    },[]);\r\n\r\n    return story && story.url?(\r\n        <>\r\n        <StoryWrapper data-testid=\"story\">\r\n            <StoryTitle><a target=\"_blank\" href={story.url}>{story.title}</a></StoryTitle>\r\n\r\n            <StoryMeta>\r\n                <span  data-testid=\"story-by\">\r\n                    <StoryMetaElement color=\"#fff\">By:</StoryMetaElement>{` ${story.by}`}\r\n                </span>\r\n                <span  data-testid=\"story-time\">\r\n                    <StoryMetaElement color=\"#fff\">Posted:</StoryMetaElement>\r\n                    {` ${mapTime(story.time)}`}\r\n\r\n                </span>\r\n            </StoryMeta>\r\n            <StoryMeta>\r\n                <span>\r\n                <StoryMetaElement color=\"#fff\">Score:</StoryMetaElement>\r\n                    {` ${story.score}`}\r\n                </span>\r\n            \r\n                <StoryMetaElement>\r\n                    <span>Comments:\r\n                    <Link\r\n                        url={`https://news.ycombinator.com/item?id=${storyId}`}\r\n                        title={`${story.kids && story.kids.length > 0 ? story.kids.length : 0} comments`}\r\n                    />\r\n                     </span>\r\n                     \r\n                </StoryMetaElement>\r\n\r\n            </StoryMeta>\r\n        </StoryWrapper>\r\n        {/* <hr style={{color:\"white\"}}/> */}\r\n        </>\r\n        \r\n    ):null;\r\n};","import React,{useState,useEffect} from 'react';\r\nimport {getTopStory} from '../services/hackerNewsApi';\r\nimport {StoryMeta, StoryMetaElement, StoryTitle, StoryWrapper} from '../styles/StoryStyles'\r\nimport {mapTime} from '../components/mapTime'\r\n\r\nconst Link = ({ url, title }) => (\r\n    <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n      {title}\r\n    </a>\r\n  );\r\n\r\n\r\nexport const TopStory=({topStoryId})=>{\r\n    const [topStory,setTopStory]=useState({});\r\n\r\n\r\n    useEffect(()=>{\r\n        getTopStory(topStoryId).then(data=>data && data.url && setTopStory(data))\r\n    },[]);\r\n\r\n    return topStory && topStory.url?(\r\n        <>\r\n        \r\n        <StoryWrapper data-testid=\"story\">\r\n            <StoryTitle><a target=\"_blank\" href={topStory.url}>{topStory.title}</a></StoryTitle>\r\n\r\n            <StoryMeta>\r\n                <span  data-testid=\"story-by\">\r\n                    <StoryMetaElement color=\"#fff\">By:</StoryMetaElement>{` ${topStory.by}`}\r\n                </span>\r\n                <span  data-testid=\"story-time\">\r\n                    <StoryMetaElement color=\"#fff\">Posted:</StoryMetaElement>\r\n                    {` ${mapTime(topStory.time)}`}\r\n\r\n                </span>\r\n            </StoryMeta>\r\n            <StoryMeta>\r\n                <span>\r\n                <StoryMetaElement color=\"#fff\">Score:</StoryMetaElement>\r\n                    {` ${topStory.score}`}\r\n                </span>\r\n\r\n                <StoryMetaElement>\r\n                    <span>Comments:\r\n                    <Link\r\n                        url={`https://news.ycombinator.com/item?id=${topStoryId}`}\r\n                        title={`${topStory.kids && topStory.kids.length > 0 ? topStory.kids.length : 0} comments`}\r\n                    />\r\n                     </span>\r\n                </StoryMetaElement>\r\n\r\n            </StoryMeta>\r\n        </StoryWrapper>\r\n        <hr/>\r\n        </>\r\n    ):null;\r\n};","import React,{useState,useEffect} from 'react';\r\nimport {getBestStory} from '../services/hackerNewsApi';\r\nimport {StoryMeta, StoryMetaElement, StoryTitle, StoryWrapper} from '../styles/StoryStyles'\r\nimport {mapTime} from '../components/mapTime'\r\n\r\nconst Link = ({ url, title }) => (\r\n    <a href={url} target=\"_blank\" rel=\"noreferrer\">\r\n      {title}\r\n    </a>\r\n  );\r\n\r\n\r\nexport const BestStory=({bestStoryId})=>{\r\n    const [bestStory,setBestStory]=useState({});\r\n\r\n\r\n    useEffect(()=>{\r\n        getBestStory(bestStoryId).then(data=>data && data.url && setBestStory(data))\r\n    },[]);\r\n\r\n    return bestStory && bestStory.url?(\r\n        <>\r\n        <StoryWrapper data-testid=\"story\">\r\n            <StoryTitle><a target=\"_blank\" href={bestStory.url}>{bestStory.title}</a></StoryTitle>\r\n\r\n            <StoryMeta>\r\n                <span  data-testid=\"story-by\">\r\n                    <StoryMetaElement color=\"#fff\">By:</StoryMetaElement>{` ${bestStory.by}`}\r\n                </span>\r\n                <span  data-testid=\"story-time\">\r\n                    <StoryMetaElement color=\"#fff\">Posted:</StoryMetaElement>\r\n                    {` ${mapTime(bestStory.time)}`}\r\n\r\n                </span>\r\n            </StoryMeta>\r\n            <StoryMeta>\r\n                <span>\r\n                <StoryMetaElement color=\"#fff\">Score:</StoryMetaElement>\r\n                    {` ${bestStory.score}`}\r\n                </span>\r\n                \r\n                    <StoryMetaElement>\r\n                    <span>Comments:\r\n                    <Link\r\n                        url={`https://news.ycombinator.com/item?id=${bestStoryId}`}\r\n                        title={`${bestStory.kids && bestStory.kids.length > 0 ? bestStory.kids.length : 0} comments`}\r\n                    />\r\n                     </span>\r\n                    </StoryMetaElement>\r\n            </StoryMeta>\r\n           \r\n        </StoryWrapper>\r\n         <hr/>\r\n         </>\r\n\r\n        \r\n    ):null;\r\n};","import styled,{createGlobalStyle} from 'styled-components';\r\n\r\nexport const GlobalStyle=createGlobalStyle`\r\nbody{\r\n    margin:5px;\r\n    padding:5px;\r\n    background-color:#121212;\r\n    color:#fff;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size:12px;\r\n}\r\n\r\nul{\r\n    margin:0;\r\n    padding:0;\r\n}\r\n`\r\n\r\nexport const StoriesContainerWrapper=styled.main`\r\n    max-width:1140px;\r\n    padding:20px 15px;\r\n    margin :auto;\r\n`\r\nexport const HeadWrapper=styled.h1`\r\n    font-size:35px;\r\n    background-color:#f0f0ed;\r\n    padding:10px;\r\n    border:2px solid black;\r\n    opacity:0.8;\r\n    color:#000;\r\n    border-radius:10px;\r\n    p{\r\n        font-size:12px;\r\n    }\r\n    \r\n`\r\nexport const ButtonWrapper=styled.button`\r\n    font-size:25px;\r\n    font-weight:bold;\r\n    width:220px;\r\n    padding:5px;\r\n    color:white;\r\n    background-color:#333;\r\n    margin:10px;\r\n    box-shadow: 2px 2px solid white;\r\n`","import React,{useState,useEffect} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {getStoryIds} from '../services/hackerNewsApi'\r\nimport {getBestStoryIds} from '../services/hackerNewsApi'\r\nimport {getTopStoryIds} from '../services/hackerNewsApi'\r\nimport {Story} from '../components/Story'\r\nimport {TopStory} from '../components/TopStory'\r\nimport {BestStory} from '../components/BestStory'\r\nimport {ButtonWrapper,HeadWrapper} from '../styles/StoriesContainerStyles'\r\n\r\n\r\n\r\nimport{GlobalStyle,StoriesContainerWrapper} from \"../styles/StoriesContainerStyles\"\r\n\r\n\r\nexport const StoryContainer=()=>{\r\n    const [storyIds,setStoryIds]=useState([]);\r\n    const[bestStoryIds,setBestStoryId]=useState([]);\r\n    const[topStoryIds,setTopStoryId]=useState([]);\r\n    const[storyView,setStoryView]=useState(\"block\");\r\n    const[bestStoryView,setBestStoryView]=useState(\"none\");\r\n    const[topStoryView,setTopStoryView]=useState(\"none\");\r\n    \r\n  \r\n    useEffect(()=>{\r\n      getStoryIds().then(op=>op && setStoryIds(op));\r\n      getBestStoryIds().then(op2=>op2 && setBestStoryId(op2));\r\n      getTopStoryIds().then(op3=>op3 && setTopStoryId(op3));\r\n    },[]);\r\n\r\n    \r\n    const newStoryHandler=()=>{\r\n        setStoryView(\"block\");\r\n        setBestStoryView(\"none\");\r\n        setTopStoryView(\"none\");\r\n    }\r\n    const bestStoryHandler=()=>{\r\n        setStoryView(\"none\");\r\n        setBestStoryView(\"block\");\r\n        setTopStoryView(\"none\");\r\n    }\r\n    const topStoryHandler=()=>{\r\n        setStoryView(\"none\");\r\n        setBestStoryView(\"none\");\r\n        setTopStoryView(\"block\");\r\n    }\r\n\r\n  \r\n    return(\r\n    <>\r\n    \r\n    <GlobalStyle/>\r\n    <StoriesContainerWrapper data-test-id=\"stories-cointainer\">\r\n        <HeadWrapper>News and Stories from HackerNewsAPI<p>18euec021-Arulanandha Guru I</p></HeadWrapper>\r\n        <h4>Greetings Viewer!!! Please wait for your stories to load...</h4>\r\n        <ButtonWrapper onClick={newStoryHandler}>NEW STORIES</ButtonWrapper>\r\n        <ButtonWrapper onClick={bestStoryHandler}>BEST STORIES</ButtonWrapper>\r\n        <ButtonWrapper onClick={topStoryHandler}>TOP STORIES</ButtonWrapper>\r\n        <br/>\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n            \r\n                <div style={{display:`${storyView}`}} className=\"col-sm-12\">\r\n                    <h2>NEW STORIES</h2>\r\n                {storyIds.map(storyId=>(<Story key={storyId} storyId={storyId}/> ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div style={{display:`${bestStoryView}`}} className=\"col-sm-12\">\r\n                    <h2>BEST STORIES</h2>\r\n                {bestStoryIds.map(bestStoryId=>(<BestStory key={bestStoryId} bestStoryId={bestStoryId}/> ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div style={{display:`${topStoryView}`}} className=\"col-sm-12\">\r\n                    <h2>TOP STORIES</h2>\r\n                {topStoryIds.map(topStoryId=>(<TopStory key={topStoryId} topStoryId={topStoryId}/> ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </StoriesContainerWrapper>\r\n    \r\n    \r\n    </>)\r\n  };\r\n\r\n","import React from 'react'\nimport {StoryContainer} from './containers/StoryContainer'\n\n\nexport const App=()=>{\n\nreturn(\n<>\n\n\n<StoryContainer></StoryContainer>\n\n</>)}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {render} from 'react-dom';\n\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n//serviceWorker.register();\nreportWebVitals();\n"],"sourceRoot":""}